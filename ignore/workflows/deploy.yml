name: Deploy to Google Cloud Platform

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  # GCP Configuration
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  REPO: storymimi-repo
  API_SERVICE: storymimi-api
  WORKER_SERVICE: storymimi-worker
  REDIS_INSTANCE: storymimi-redis
  
  # Application Configuration
  DEBUG: false
  HOST: 0.0.0.0
  PORT: 8080
  
  # AI Service URLs and Models (non-sensitive)
  OPENROUTER_BASE_URL: ${{ vars.OPENROUTER_BASE_URL }}
  QWEN_MODEL_NAME: ${{ vars.QWEN_MODEL_NAME }}
  TOGETHER_BASE_URL: ${{ vars.TOGETHER_BASE_URL }}
  FLUX_MODEL_NAME: ${{ vars.FLUX_MODEL_NAME }}
  ELEVENLABS_USE_V3: ${{ vars.ELEVENLABS_USE_V3 }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker Images
        run: |
          # Build API image
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/api:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/api:${{ github.sha }}
          
          # Tag as latest
          docker tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/api:${{ github.sha }} \
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/api:latest
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/api:latest
          
          # Build Worker image (same Dockerfile, different entrypoint)
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/worker:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/worker:${{ github.sha }}
          
          # Tag as latest
          docker tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/worker:${{ github.sha }} \
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/worker:latest
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/worker:latest

      - name: Deploy API to Cloud Run
        id: deploy-api
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.API_SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/api:${{ github.sha }}
          env_vars: |
            DEBUG=${{ env.DEBUG }}
            HOST=${{ env.HOST }}
            PORT=${{ env.PORT }}
            OPENROUTER_BASE_URL=${{ env.OPENROUTER_BASE_URL }}
            QWEN_MODEL_NAME=${{ env.QWEN_MODEL_NAME }}
            TOGETHER_BASE_URL=${{ env.TOGETHER_BASE_URL }}
            FLUX_MODEL_NAME=${{ env.FLUX_MODEL_NAME }}
            ELEVENLABS_USE_V3=${{ env.ELEVENLABS_USE_V3 }}
          secrets: |
            REDIS_URL=${{ secrets.REDIS_URL }}
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
            OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            TOGETHER_API_KEY=${{ secrets.TOGETHER_API_KEY }}
            ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}
            ELEVENLABS_VOICE_ID=${{ secrets.ELEVENLABS_VOICE_ID }}
          flags: |
            --min-instances=1
            --max-instances=5
            --cpu=1
            --memory=1Gi
            --vpc-connector=storymimi-connector
            --allow-unauthenticated

      - name: Deploy Worker to Cloud Run
        id: deploy-worker
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.WORKER_SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/worker:${{ github.sha }}
          env_vars: |
            DEBUG=${{ env.DEBUG }}
            HOST=${{ env.HOST }}
            PORT=${{ env.PORT }}
            OPENROUTER_BASE_URL=${{ env.OPENROUTER_BASE_URL }}
            QWEN_MODEL_NAME=${{ env.QWEN_MODEL_NAME }}
            TOGETHER_BASE_URL=${{ env.TOGETHER_BASE_URL }}
            FLUX_MODEL_NAME=${{ env.FLUX_MODEL_NAME }}
            ELEVENLABS_USE_V3=${{ env.ELEVENLABS_USE_V3 }}
          secrets: |
            REDIS_URL=${{ secrets.REDIS_URL }}
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
            OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            TOGETHER_API_KEY=${{ secrets.TOGETHER_API_KEY }}
            ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}
            ELEVENLABS_VOICE_ID=${{ secrets.ELEVENLABS_VOICE_ID }}
          flags: |
            --min-instances=1
            --max-instances=5
            --cpu=1
            --memory=1Gi
            --vpc-connector=storymimi-connector
            --no-allow-unauthenticated
          command: celery
          args: -A app.core.celery_app:celery_app worker --loglevel=info

      - name: Output API URL
        run: echo "API URL = ${{ steps.deploy-api.outputs.url }}" 